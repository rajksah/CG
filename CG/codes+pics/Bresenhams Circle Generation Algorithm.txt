#include<GL/glut.h>
#include <iostream>
#include <math.h>

using namespace std;
float r, g, b, radius, S;
float x, y;
float x_1, y_1;

void Circle() {

    S = 3 - 2 * radius;
    x = 0;
    y = radius;
    glBegin(GL_POINTS);
    glVertex2f(x + x_1, y + y_1);
    glVertex2f(-x + x_1, y + y_1);
    glVertex2f(x + x_1, -y + y_1);
    glVertex2f(-x + x_1, -y + y_1);
    glVertex2f(y + x_1, x + y_1);
    glVertex2f(y + x_1, -x + y_1);
    glVertex2f(-y + x_1, x + y_1);
    glVertex2f(-y + x_1, -x + y_1);
    glEnd();
    glFlush();
    while (x < y)
    {
        if (S <= 0)
        {
            S = S + (4 * x) + 6;
            x = ++x;
            y = y;

            glBegin(GL_POINTS);
            glVertex2f(x + x_1, y + y_1);
            glVertex2f(-x + x_1, y + y_1);
            glVertex2f(x + x_1, -y + y_1);
            glVertex2f(-x + x_1, -y + y_1);
            glVertex2f(y + x_1, x + y_1);
            glVertex2f(y + x_1, -x + y_1);
            glVertex2f(-y + x_1, x + y_1);
            glVertex2f(-y + x_1, -x + y_1);
            glEnd();
            glFlush();
        }
        else
        {
            S = S + (4 * (x - y)) + 10;
            x = ++x;
            y = --y;
            glBegin(GL_POINTS);
            glVertex2f(x + x_1, y + y_1);
            glVertex2f(-x + x_1, y + y_1);
            glVertex2f(x + x_1, -y + y_1);
            glVertex2f(-x + x_1, -y + y_1);
            glVertex2f(y + x_1, x + y_1);
            glVertex2f(y + x_1, -x + y_1);
            glVertex2f(-y + x_1, x + y_1);
            glVertex2f(-y + x_1, -x + y_1);
            glEnd();
            glFlush();
        }
    }
}
          void init(void)
{
    glClearColor(1.0, 1.0, 1.0, 0);
    glColor3f(0.0, 0.0, 0.0);
    gluOrtho2D(-300, 300, -300, 300);
    glClear(GL_COLOR_BUFFER_BIT);
    glBegin(GL_LINES);
    glVertex3f(0, 299, 0);
    glVertex3f(0, -299, 0);
    glVertex3f(-299, 0, 0);
    glVertex3f(299, 0, 0);
    glEnd();
    glFlush();
}-------------------------------+*++++++++++++++++++

int main(int argc, char** argv) {

    cout << " Enter x1, y1 point";
    cin >> x_1 >> y_1;
    cout << "\n radius";
    cin >> radius;
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowPosition(0, 0);
    glutInitWindowSize(-300, 300);
    glutCreateWindow("Bresenhams Circle");
    init();
    glutDisplayFunc(Circle);
    glutMainLoop();
    return 0;
}